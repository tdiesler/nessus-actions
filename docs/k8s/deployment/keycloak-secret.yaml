#
# curl --create-dirs -so tls/jboss-org.pem https://raw.githubusercontent.com/tdiesler/nessus-actions/master/docs/k8s/deployment/keycloak/jboss-org.pem
# curl --create-dirs -so tls/tls.crt https://raw.githubusercontent.com/tdiesler/nessus-actions/master/docs/k8s/deployment/keycloak/tls.crt
# curl --create-dirs -so tls/tls.key https://raw.githubusercontent.com/tdiesler/nessus-actions/master/docs/k8s/deployment/keycloak/tls.key
#
# kubectl create secret generic keycloak --from-file=jboss-org.pem=tls/jboss-org.pem --from-file=tls.crt=tls/tls.crt --from-file=tls.key=tls/tls.key
# kubectl get secret/keycloak -o yaml >> docs/k8s/deployment/keycloak-secret.yaml

apiVersion: v1
data:
  jboss-org.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHNkRDQ0JkQ2dBd0lCQWdJUUJraTM1UmJHNjNiM2YzWkVFSkgydERBTkJna3Foa2lHOXcwQkFRc0ZBREJ3DQpNUXN3Q1FZRFZRUUdFd0pWVXpFVk1CTUdBMVVFQ2hNTVJHbG5hVU5sY25RZ1NXNWpNUmt3RndZRFZRUUxFeEIzDQpkM2N1WkdsbmFXTmxjblF1WTI5dE1TOHdMUVlEVlFRREV5WkVhV2RwUTJWeWRDQlRTRUV5SUVocFoyZ2dRWE56DQpkWEpoYm1ObElGTmxjblpsY2lCRFFUQWVGdzB4T1RBeU1EWXdNREF3TURCYUZ3MHlNVEF6TVRjeE1qQXdNREJhDQpNSHN4Q3pBSkJnTlZCQVlUQWxWVE1SY3dGUVlEVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFUU1BNEdBMVVFDQpCeE1IVW1Gc1pXbG5hREVXTUJRR0ExVUVDaE1OVW1Wa0lFaGhkQ3dnU1c1akxqRVRNQkVHQTFVRUN4TUtVRzVVDQpJRVJsZGs5d2N6RVVNQklHQTFVRUF3d0xLaTVxWW05emN5NXZjbWN3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBDQpBNElCRHdBd2dnRUtBb0lCQVFEakJKMm5UWkZHWUxRTGRva28rbklJcEE5NTR4MXBJYy9NSHZUczNsc3AyUStiDQpCdGZDelpEZXFoK3B4b0E2Wlg3cW54RVpxN2VsdFdHcGEvNitTQ1pYRXFMeFJpQU94dUpJZUQzU1lWUHk4TzhVDQpHTFF4UUF2OC9QT2dpUWZzY1RxOWJpcVArcWVCS3ZSM2ljQUhXTUlrY2tUdmtVS1hrMDF4VWpGZlRFdWhyZUZ3DQozSWhLL3BvOHpPbXZtS0g2Q1M5WjVLOW9DdGtSQ1o3RXpWS1VLRnovS3dLSFFaSE9GTjZHbHNSaTZvc3RhQzgvDQpzZEhpK1F4b1VoYlhqMlNNRk80MWwvckNIcitUK0FObWpENlJYbTVWeFFWTlRoR0hJdjhUb3hkOHFrSWdSS2Z3DQpRZ1k1R2w4Ykt5WXFHa1JydXBYL1VTOGlqT3ZCUDMzdUxCaUdjdnBMQWdNQkFBR2pnZ054TUlJRGJUQWZCZ05WDQpIU01FR0RBV2dCUlJhUCtRcndJSGRUek0yV1ZrWXFJU3VGbHlPekFkQmdOVkhRNEVGZ1FVV2g0L3hXUm85TW1pDQpkMUd3Nk80cUU5bHNvZEF3SVFZRFZSMFJCQm93R0lJTEtpNXFZbTl6Y3k1dmNtZUNDV3BpYjNOekxtOXlaekFPDQpCZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNSFVHDQpBMVVkSHdSdU1Hd3dOS0F5b0RDR0xtaDBkSEE2THk5amNtd3pMbVJwWjJsalpYSjBMbU52YlM5emFHRXlMV2hoDQpMWE5sY25abGNpMW5OaTVqY213d05LQXlvRENHTG1oMGRIQTZMeTlqY213MExtUnBaMmxqWlhKMExtTnZiUzl6DQphR0V5TFdoaExYTmxjblpsY2kxbk5pNWpjbXd3VEFZRFZSMGdCRVV3UXpBM0JnbGdoa2dCaHYxc0FRRXdLakFvDQpCZ2dyQmdFRkJRY0NBUlljYUhSMGNITTZMeTkzZDNjdVpHbG5hV05sY25RdVkyOXRMME5RVXpBSUJnWm5nUXdCDQpBZ0l3Z1lNR0NDc0dBUVVGQndFQkJIY3dkVEFrQmdnckJnRUZCUWN3QVlZWWFIUjBjRG92TDI5amMzQXVaR2xuDQphV05sY25RdVkyOXRNRTBHQ0NzR0FRVUZCekFDaGtGb2RIUndPaTh2WTJGalpYSjBjeTVrYVdkcFkyVnlkQzVqDQpiMjB2UkdsbmFVTmxjblJUU0VFeVNHbG5hRUZ6YzNWeVlXNWpaVk5sY25abGNrTkJMbU55ZERBTUJnTlZIUk1CDQpBZjhFQWpBQU1JSUJmZ1lLS3dZQkJBSFdlUUlFQWdTQ0FXNEVnZ0ZxQVdnQWR3RHVTNzIzZGM1Z3V1RkNhUityDQo0WjVtb3c5K1g3QnkySU1BeEh1SmVxajl5d0FBQVdqQzB3RmZBQUFFQXdCSU1FWUNJUURucnJ0MFN2YWM3c0REDQoyelVTQUZxdXRUM2V2ZzNxczdnWmp2Sks4R3VZK2dJaEFQT0J1ZHpCcWpoRUVhWXRxdHh1TmdMdG9NcW5lWDkyDQpDeStZTHBESVBCYjBBSFVBaDNXLzUxbDgrSXhEbVYrOTgyNy9WbzFIVmpiL1NyVmd3YlRxLzE2Z2d3OEFBQUZvDQp3dE1DT0FBQUJBTUFSakJFQWlCa2RrNFhFN1djZkliOElIN2pTZFdPV24rcmtDaEg5dDRaTXNZZGNRVFJoZ0lnDQpZZUFpZkF1d0g1VkhXNFdUVFFHdlMxZFpvWE9hQWRxeDczZm5wT1dvck9VQWRnQnZVM2FzTWZBeEdkaVpBS1JSDQpGZjkzRlJ3UjJRTEJBQ2tHamJJSW1qZlpFd0FBQVdqQzB3TkNBQUFFQXdCSE1FVUNJUURNQjRpRlNDR2ZGODAwDQpGcXZHaTR4S3RMNlJTeFJKUDlMOTFScFZHaFUza0FJZ1VKem9ZSUxXY0o5VXB3ZDdSSE5xOFppRE1hLzJuRWdyDQpiNTRieTRobWRmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQUdCaldRWFkxRnZMLzBvSm44MnAraHFib0lLDQo3dE90TVNsa1hNMS9nWjhEK3FnZlY1ZStvOUpsaHFvdERaTGJyM0NINThQQUUxMXlldnlHV3pHV0JOSy80RTJyDQp5bFJQMG5NdW9OVzlGb1RodVA5RERhdksyY3VOYTVNcVkvMVRzaDFKMlpyN0xJd0pCZkYzTEQ0U3JXWlRuL2UvDQo2YzNYL0NnaHJJdXhFbFVvTW5xT3lzWWVZM3pEUzc4cFBqN1I1a0VMRHFqT0hVTS9YK3ZIMGJVZjVQblJuY0dZDQp3TzFLanZrV0Qvd3o4QW1nRzA1a0JyQkk3S1NiVWQrRTM4RkJoT1NtdWpGMjhpVklVZUtzQ1NmaWMxQndkaVFTDQp3ak9NUGNjemljcTV3Y1ZISlVGR3FENGhINEZPZWZCZVFYbTQ0UVkxYnNpU0JHT0F1VmFtWUJPNFhXTT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  tls.crt: QmFnIEF0dHJpYnV0ZXMKICAgIGZyaWVuZGx5TmFtZTogdHJ5aXQKICAgIGxvY2FsS2V5SUQ6IDU0IDY5IDZEIDY1IDIwIDMxIDM2IDMwIDMyIDMzIDM2IDMwIDMwIDM4IDM2IDM5IDM5IDM5IApzdWJqZWN0PS9DPURFL1NUPUJhdmFyaWEvTD1NdW5pY2gvTz1SZWRIYXQvT1U9RnVzZS9DTj1UaG9tYXMgRGllc2xlcgppc3N1ZXI9L0M9REUvU1Q9QmF2YXJpYS9MPU11bmljaC9PPVJlZEhhdC9PVT1GdXNlL0NOPVRob21hcyBEaWVzbGVyCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEanpDQ0FuZWdBd0lCQWdJRWVITkdaakFOQmdrcWhraUc5dzBCQVFzRkFEQnBNUXN3Q1FZRFZRUUdFd0pFClJURVFNQTRHQTFVRUNCTUhRbUYyWVhKcFlURVBNQTBHQTFVRUJ4TUdUWFZ1YVdOb01ROHdEUVlEVlFRS0V3WlMKWldSSVlYUXhEVEFMQmdOVkJBc1RCRVoxYzJVeEZ6QVZCZ05WQkFNVERsUm9iMjFoY3lCRWFXVnpiR1Z5TUI0WApEVEl3TVRBeE1ESXdNREV4T0ZvWERUSXhNVEF3TlRJd01ERXhPRm93YVRFTE1Ba0dBMVVFQmhNQ1JFVXhFREFPCkJnTlZCQWdUQjBKaGRtRnlhV0V4RHpBTkJnTlZCQWNUQmsxMWJtbGphREVQTUEwR0ExVUVDaE1HVW1Wa1NHRjAKTVEwd0N3WURWUVFMRXdSR2RYTmxNUmN3RlFZRFZRUURFdzVVYUc5dFlYTWdSR2xsYzJ4bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLL2NBNDJLUTdVN29xNG10L01sRDZxTW40VDI3U3QrCmM2aTcyUGVMbUFwYWY5MXRVMGJOdU82TWFRdDBDcmpQTWVqY3RZU3l1NGpMUWtEWGVuV2NZUkowRmkzUWpRQnAKc09zbjRsaHkxRkR0SDVlYmx0MXU2YUNnR0JqSWdaRFFNQnZDQWFEaEl3ME42dlZWclNOVEZYaHBYd0JDSk91cApWMG9uQWdLanpUNG9mLzF6SmdiRm1KRDJNY09Ed2xocUVqMURuTEkySHh2V3FlaHFRb3grYkY2enNZUnpPb05IClFRSThGblhlQWJoU2tKWkREbUtpWjl1a29ydW83VjJFb3dMU1BLK2F6cmlWQ3NaekZwa0lmVDhEemJ0N1ZwdEIKQkVFN3VYdXhkZTZZNyt0Ynl3MzlhQnQ3Z09IZG9USWRmWkpYT2JUYlNpNmRYYTVIWlV5R2Nuc0NBd0VBQWFNLwpNRDB3SEFZRFZSMFJBUUgvQkJJd0VJSUllVzkxY21odmMzU0hCRit6alJRd0hRWURWUjBPQkJZRUZQVkUvakpSCkREY1dtSy9QTVZIL3MxeC9KZVNtTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBZ0VkQ2lHQzRuKzBVRHFqWmcKcUo1RzFpUDF6YmRkZi95Zlc1K09OU0ZIKytPZFE1WEs5Y0xzZkNPaVQvVHh4cmVhK0M1RTFQQVVwVjFsL05JUQpnclppQnlGMTFOaWNweFpEMU1wbHc5UHV5R0FHT3VCclpKZG1NTVR4WFlINFk2cngxWmJ0aFpzR2krcURQMXpVCm1YTEw4ZVZKMERjQmNHZEkxbHFJQ08yNlpCdHoyWjNiR3lyWEJJUlNjdXU5am9pZ29WZ0NzMVRkUWFTNVRHKzQKMFRaNnBQTndvdTRiU1BqTWJFVWtPUWJCdTgwY0NJYTYvcmFMNDk4TEFZcnFNc3JDOStBRHVFaHVGZ3R4ejRkeQpFWWlhM1hVbzJkUEJrWGRxTXJ0MFhmdTFWVzZlRms0YTNrdytuMWxVQlVDU1BsZzQ1dEJwcnRsT0Rkem1kbTllCjJyQ0YKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: QmFnIEF0dHJpYnV0ZXMKICAgIGZyaWVuZGx5TmFtZTogdHJ5aXQKICAgIGxvY2FsS2V5SUQ6IDU0IDY5IDZEIDY1IDIwIDMxIDM2IDMwIDMyIDMzIDM2IDMwIDMwIDM4IDM2IDM5IDM5IDM5IApLZXkgQXR0cmlidXRlczogPE5vIEF0dHJpYnV0ZXM+Ci0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLQpNSUlFdmdJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLZ3dnZ1NrQWdFQUFvSUJBUUN2M0FPTmlrTzFPNkt1CkpyZnpKUStxakorRTl1MHJmbk9vdTlqM2k1Z0tXbi9kYlZOR3pianVqR2tMZEFxNHp6SG8zTFdFc3J1SXkwSkEKMTNwMW5HRVNkQll0MEkwQWFiRHJKK0pZY3RSUTdSK1htNWJkYnVtZ29CZ1l5SUdRMERBYndnR2c0U01ORGVyMQpWYTBqVXhWNGFWOEFRaVRycVZkS0p3SUNvODArS0gvOWN5WUd4WmlROWpIRGc4SllhaEk5UTV5eU5oOGIxcW5vCmFrS01mbXhlczdHRWN6cURSMEVDUEJaMTNnRzRVcENXUXc1aW9tZmJwS0s3cU8xZGhLTUMwanl2bXM2NGxRckcKY3hhWkNIMC9BODI3ZTFhYlFRUkJPN2w3c1hYdW1PL3JXOHNOL1dnYmU0RGgzYUV5SFgyU1Z6bTAyMG91blYydQpSMlZNaG5KN0FnTUJBQUVDZ2dFQVNpajQ0cFpkQ1M5VjRpVDN5N1JrVCtLdlhvNFc1QkdXU3FDMDFXZHJ2V24rCm8rejNnbE04Mm5RaDFDK2lXZDhlUi9uVEhsdVZGQkhMSmJiNHNHSTYyV0pVL0FzSGV4WVhBb08yUXVCaHdxTE0KZ00yZktGQWVlNXNucmtQWHg2N1RxdEQ4aU5DSVRIZ0REbVNMOStxUWtrKzFQVkduYWkzbVhxSG1paUJ6YS9OSwpvaTMxaXpiTExVUDZROTlELzEzQ01QbTU1S3lpL2t4ZmtucERDWWpuNkMwTkdDc0s1OTlTRkNtbC9xTGc1Nm5VCjBoVjVybjRrOXBxZFBha1FHS3BDcTZZLys2N1hXQ0JaejlSYnJsNWtXZExKK2hybmJKOVVETi9xY2VuUFEzRzcKZDlUanVqdHpGc0xvNVdwUkZwbERFeDhzSWZ1V0JzUEpUa2pjbldSVmVRS0JnUURvQ2F3Z1VZdHJLUmRrbWQ5MgpXQ1NoMkhKa0ZHQ0NpK3ZOR1JEcS9IUXFlRktFQWlycGVpZVhVU0xsT2FndFRTTGh5SDhFUnpYdkdtSVU0cW5RCkVKMWdxdDFNczVKUmVoUU9tcDlhUHhkZ0FXZTJlWndIcmlrNGFkNDh3T0NpVm5kUHBheTdCYzdKcms2eG5pSHgKeCtRajNvVjNyeVlvVWN5ZTJtTjlzTEtoVlFLQmdRRENCU3J4dWVTRThLVkJUWWZoSG8zWG9iMk1RZGsxYTMzOApzY1BDWGNWRnJhNTNIRGpiSXo0N0pMRjI0OUN1d29LdS84T3dqYU12QmpMZmxOR0dSVWJTWkhqRlpPUXRvU04xCktZQWlDSUJaaC9zSnNvVWpUVlAyVFB5Q3IvbkpIL0hXM3ozYTRVdHNjMi9TS1M3K3RON3dGVEJzUHZsQzJwcHkKQk1tc1NWVUVqd0tCZ0RqblpsYm1xSkkzR1kyS1RzcnZBc3pPRC8rTEg3L2tJSWZEeGVwYXp3STdUOEVmNXZZcgpCdHFOQTBuRHdnS2FFQnZlMTRkdEQwVDc2MkhEMUhFNklkNDdDTnB1ajB0NzdMOUlIQnc5ckxYV29tQ1ZvallmCjkrdmx5cUtMaW90Rk9TMUhLLzBSaDR6ZU9sNUVzWDVoendrYzRRNWczYksxbk1DNFBmM3MvMkdoQW9HQkFLbTkKQ2FmMmdIVEpiMW5sTVVZQ2pBY2s2Z1lscVpoeGxRUVlwUEdMUmNYQ3Y4cFd0MnNIdHk3WTJDVHlBNlNRYVBJZQpzaDNvbStYTTMzNzQzQ0ZDeEVYV1BrNDdDT0RlZzMzQnMrYVNWMjk4Wm1SQ2VQVzhkZ01ac1NQSVBwZjFTWWM1ClFRMFhZdnZiTmUyL3QreC9ZamJaNHNZZ2hjTTJLajRyOEIrNC9CY0RBb0dCQUtBVU94RGxwVnV6elRFR3c0NmMKMVY2Q3k4RTdOcUZxbzJEQUY4Y0RaOC92Z3pjTFdrVVVqc1l6VWo4TGh2cFZzLzh5SktVNXM0SGU2WG15WUxMcApsc0t3WmJBTnpIS1BETFZBQ3VyN2UvZ0V6SnFiREpXOUdadE1jTmFOTnpxcytMSWJYYXFmemxhRTVSWkxwcjBoCkxkTWpsZmNOWVFFTDFPRU5pK1RXWlQwcAotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: keycloak
type: Opaque
