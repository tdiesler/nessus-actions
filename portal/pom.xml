<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
	    <groupId>io.nessus.actions</groupId>
	    <artifactId>nessus-actions</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    
    <artifactId>nessus-actions-portal</artifactId>
    <packaging>war</packaging>

    <name>Nessus :: Actions :: Portal</name>

    <!-- Properties -->
    <properties>
        <docker.image.name>nessusio/nessus-actions-portal</docker.image.name>
        <docker.image.from>quay.io/wildfly/wildfly-centos7:20.0</docker.image.from>
        <docker.image.maintainer>Thomas Diesler tdiesler@redhat.com</docker.image.maintainer>
        <docker.image.version>latest</docker.image.version>
        <docker.skipPush>true</docker.skipPush>
        <server.home>/opt/wildfly</server.home>
    </properties>

	<!-- Dependencies -->
    <dependencies>
        
        <!-- Compile -->
		<dependency>
		    <groupId>io.nessus.actions</groupId>
		    <artifactId>nessus-actions-runner</artifactId>
		    <version>${project.version}</version>
		</dependency>
        
        <!-- Provided -->
		<dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_4.0_spec</artifactId>
			<scope>provided</scope>
		</dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
			<scope>provided</scope>
        </dependency>
    </dependencies>

	<!-- 
		docker run - -detach - -name portal -p 9090:8080 nessusio/nessus-actions-portal
		
		http://127.0.0.1:9090/nessus-actions-portal
	-->
	 
	<build>
		<plugins>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <autoPull>always</autoPull>
                    <images>
                        <image>
                            <name>${docker.image.name}</name>
                            <build>
                                <maintainer>${docker.image.maintainer}</maintainer>
                                <from>${docker.image.from}</from>
                                <tags>
                                    <tag>${docker.image.version}</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                                <assembly>
                                    <descriptorRef>artifact</descriptorRef>
                                	<targetDir>${server.home}/standalone/deployments</targetDir>
                                </assembly>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>remove-images</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>remove</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <name>${docker.image.name}:${docker.image.version}</name>
                                </image>
                                <image>
                                    <name>${docker.image.name}:${project.version}</name>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-docker-image</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                    <execution>
                        <id>push-docker-image</id>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>
                            <skipPush>${docker.skipPush}</skipPush>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>
</project>
